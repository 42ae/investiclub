<?php $this->headTitle('Contribution'); ?>
<?php $this->jQuery()->uiEnable() ?>
<center><h1><?= 'Bilan comptable du ' . $this->balanceSheet['startDate'] . ' au ' . $this->balanceSheet['endDate'] ?></h1></center>

<?php if (isset($this->formAddAllContribution)): ?>
<div style="text-align:center; padding-bottom: 15px;">
<img class="add-all-contribution tip top-icon" title="Add all member contributions" src="/assets/img/icons/add-all-contribution.png" />
<!--<img class="add-member2" src="/assets/img/icons/add-user.png" />-->
</div>


<div id="add-all-contribution" class="top-action" style="display:none; margin-bottom:20px; margin-bottom: 20px; padding: 20px; background-color: rgb(240, 243, 248); border: 1px solid #d5dce8; border-radius: 6px;	-moz-border-radius: 6px; -webkit-border-radius: 6px;">
 <h3>Ajouter toutes les cotisations</h3>
 Vous pouvez ajouter toutes les cotisations des membres en une seule fois en remplissant le forumaire ci-dessous :
 <div style="display: none" class="flash" id="form-notice-add-all-contribution"></div>
 <form id="form-add-all-contribution" class="top-block-form" action="/ajax/members/add-all-contribution/date/<?= $this->balanceSheet['treasuryName'] ?>/format/json">
  <table>
   <?php foreach ($this->formAddAllContribution->dgFields->getElements() as $element): ?>
   <tr>
    <?= $element->renderLabel() ?>
    <td><?= $element->renderViewHelper() ?></td>
   </tr>
   <?php endforeach; ?>
   <tr>
   <?= $this->formAddAllContribution->contribution_date->renderLabel() ?>
   <td><?= $this->formAddAllContribution->contribution_date->renderUiWidgetElement() ?></td>
   </tr>
   <tr>
   <?= $this->formAddAllContribution->comment->renderLabel() ?>
   <td><?= $this->formAddAllContribution->comment->renderViewHelper() ?></td>
   </tr>
  <tr>
   <th></th>
   <td><?= $this->formAddAllContribution->submit ?></td>
  </tr>
  </table>
 </form>
</div>
<?php endif; ?>

<?= $this->notice()->get($this->messages); ?>


<div id="tabs">
    <ul>
        <?php foreach ($this->balanceSheetList as $year => $dates): ?>
        <li><a href="#tabs-<?= $year ?>"><?= $year ?></a></li>
        <?php endforeach; ?>
    </ul>
    <?php foreach ($this->balanceSheetList as $year => $dates): ?>
    <div id="tabs-<?= $year ?>">
    	<?php foreach ($dates as $info): ?>
        <button id="<?= $info['date'] ?>" style="<?php if ($info['status'] == 'validation' OR $info['status'] == 'firstValidation') echo 'color:green;border-color:green;'; if ($info['status'] == 'closed') echo 'color:gray;border-color:gray;'; ?>"><?= $info['date'] ?></button>
        <?php endforeach; ?>
    </div>
    <?php endforeach; ?>
</div>


</center><br />
<div id="contributions-list"></div>

<div id="add-contribution" style="display:none"></div>
<div id="edit-contribution" style="display:none"></div>
<div id="delete-contribution" style="display:none"></div>
<div id="send-reminder" style="display:none"></div>

<div class="modal"><!-- Ajax Spinner --></div>

<?php $this->jQuery()->javascriptCaptureStart() ?>
//<script>

$(document).on({
    ajaxStart: function() { 
        $("body").addClass("loading"); 
    },
    ajaxStop: function() {
    	$("body").removeClass("loading"); 
    }    
});

google.load('visualization', '1', {packages:['table']});
google.setOnLoadCallback(drawTable);

function drawTable() {
	<?php $model = array('members'       => $this->members, 
						 'contributions' => $this->contributions, 
						 'balanceSheet'  => $this->balanceSheet, 
						 'acl'           => $this->acl) ?>
	<?php $partial = $this->partial('members/partials/_contributions-table.phtml', 'default', $model) ?>
    var data = new google.visualization.DataTable(<?= $partial ?>);
    var table = new google.visualization.Table(document.getElementById('contributions-list'));
    table.draw(data, {allowHtml: true, showRowNumber: true});
} 


//We'll encapsulate our .qtip() call in your .live() handler method
$('.tip').live('mouseover', function(event) {
   // Bind the qTip within the event handler
   $(this).qtip({
      overwrite: false, // Make sure the tooltip won't be overridden once created
      style: {
          classes: "ui-tooltip-dark ui-tooltip-shadow"
      },
      position: {
              my: "top middle",  // Position my top left...
              at: "bottom middle" // at the bottom right of...
      },
      show: {
         event: event.type, // Use the same show event as the one that triggered the event handler
         ready: true // Show the tooltip as soon as its bound, vital so it shows up the first time you hover!
      }
   }, event); // Pass through our original event to qTip
})
// Store our title attribute in 'oldtitle' attribute instead
.each(function(i) {
   $.attr(this, 'oldtitle', $.attr(this, 'title'));
   this.removeAttribute('title');
});
<?php $this->jQuery()->javascriptCaptureEnd() ?>

<?php $this->jQuery()->onLoadCaptureStart() ?>
//<script>
    $( "#dialog:ui-dialog" ).dialog( "destroy" );
    var types = {error:"error", warning:"warning", success:"success"};
    var noticeName;
    var currentTable = "<?= $this->balanceSheet['treasuryName'] ?>";
    var noticeTop = $( "#top-notice" );

    function updateNotice(n)
    {
        clearNotice();
        content = "";
        $.each(n.content, function(key, value) {
			content += "<p>" + value + "</p>";
        });
        
        if (n.type == "success") {
        	noticeTop.stop(true, true).html(content).addClass(n.type).fadeIn(2000);
//        	noticeTop.queue(function() { 
//				setTimeout(function(){ 
//					noticeTop.dequeue(); 
//				}, 5500 );
//			});
//        	noticeTop.fadeOut("fast");
        } else {
	    	noticeName.html(content).addClass(n.type).show("slow");
        }
    }

    function clearNotice()
    {
    	noticeName.hide().empty().removeClass( "error warning success" );
    	noticeTop.hide().empty().removeClass( "error warning success" );
    }

    function drawAjaxTable(response)
    {
	     var data = new google.visualization.DataTable(response);
	     var table = new google.visualization.Table(document.getElementById('contributions-list'));
	     table.draw(data, {allowHtml: true, showRowNumber: true});
	     $( ".google-visualization-table-table" ).css("width", "100%");
	 }

	function getContributionTable(name, notice)
	{
        $.get("/ajax/members/contributions/date/" + name + "/format/html", function(data) {
        	$( "#contributions-list" ).fadeOut(500, function() {
        		google.setOnLoadCallback(drawAjaxTable(data));
  				$( "#contributions-list" ).stop(true, true).hide().fadeIn(2000);
  				if (typeof notice !== 'undefined') {
    				updateNotice(notice);
    			}
			});
        });
	}

	$.extend($.ui.dialog.prototype.options, {
	    modal: true,
	    resizable: true,
	    width: 550,
	    autoOpen: false,
	    close: function() {
        	clearNotice();
        },
        buttons: {
        	"Cancel": function() {
                $( this ).dialog( "close" );
            }
        }
	});

    $( "#add-contribution" ).dialog({
        buttons: {
            "OK": function() {
                clearNotice();
                $.post("/ajax/members/add-contribution/format/json", $( "#form-add-contribution" ).serialize(), function(data) {
                	if (data.messages.type === types.success) {
                        $( "#add-contribution" ).dialog( "close" );
                        getContributionTable(currentTable, data.messages);
                    } else // .type == warning|error
                        updateNotice(data.messages);
              	}, "json");
            }
        },
        open: function (event, ui) {
        	$( "#form-add-contribution" ).submit( function(e) {
                e.preventDefault();
            });
        }
    });


    $( "#edit-contribution" ).dialog({
        buttons: {
            "OK": function() {
                clearNotice();
                $.post("/ajax/members/edit-contribution/format/json", $( "#form-edit-contribution" ).serialize(), function(data) {
                    if (data.messages.type === types.success) {
                        $( "#edit-contribution" ).dialog( "close" );
                        getContributionTable(currentTable, data.messages);
                    } else // .type == warning|error
                        updateNotice(data.messages);
              	}, "json");
            }
        },
        open: function() {
        	$( "#form-edit-contribution" ).submit( function(e) {
                e.preventDefault();
            });
        }
    });

    $( "#delete-contribution" ).dialog({
        buttons: {
            "OK": function() {
                clearNotice();
                $.post("/ajax/members/delete-contribution/format/json", $( "#form-delete-contribution" ).serialize(), function(data) {
            		if (data.messages.type === types.success) {
                        $( "#delete-contribution" ).dialog( "close" );
                        getContributionTable(currentTable, data.messages);
                    } else // .type == warning|error
                        updateNotice(data.messages);
              	}, "json");
            }
        },
        open: function (event, ui) {
        	$(this).parents('.ui-dialog-buttonpane button:eq(0)').focus();
        }
    });

    $( "#send-reminder" ).dialog({
        buttons: {
            "OK": function() {
                clearNotice();
                $.post("/ajax/members/send-reminder/format/json", $( "#form-send-reminder" ).serialize(), function(data) {
            		if (data.messages.type === types.success) {
                        $( "#send-reminder" ).dialog( "close" );
                        getContributionTable(currentTable, data.messages);
                    } else // .type == warning|error
                        updateNotice(data.messages);
              	}, "json");
            }
        },
        open: function (event, ui) {
        	$(this).parents('.ui-dialog-buttonpane button:eq(0)').focus();
        }
    });


    $( "#form-add-all-contribution" ).submit(function(e) {
        e.preventDefault();
        clearNotice();
    	noticeName = $( "#form-notice-add-all-contribution");
        $.post($(this).attr("action"), $(this).serialize(), function(data) {
            console.log(data);
        	if (data.messages.type === types.success) {
        		$( "#add-all-contribution" ).remove();
        		$( ".add-all-contribution" ).remove();
        		getContributionTable(currentTable, data.messages);
            } else // .type == warning|error
                updateNotice(data.messages);
      	}, "json");
    });

    
    $(document).on("click", ".add-contribution", function(e) {
    	e.preventDefault();
        $.get(this.href + '/format/html', function(data) {
        	$( "#add-contribution" ).html(data);
        	noticeName = $( "#form-notice-add-contribution");
            $( "#add-contribution" ).dialog('open');
        });
    });

    $(document).on("click", ".edit-contribution", function(e) {
    	e.preventDefault();
        $.get(this.href + '/format/html', function(data) {
            $( "#edit-contribution" ).html(data);
            noticeName = $( "#form-notice-edit-contribution");
            //$( "#enrollement_date" ).datepicker("disable");
            $( "#edit-contribution" ).dialog('open');
            //$( "#enrollement_date" ).datepicker("enable");
        });
    });

    $(document).on("click", ".delete-contribution", function(e) {
    	e.preventDefault();
        $.get(this.href + '/format/html', function(data) {
        	$( "#delete-contribution" ).html(data);
            $( "#delete-contribution" ).dialog('open');
        	noticeName = $( "#form-notice-delete-contribution");
        });
    });

    $(document).on("click", ".send-reminder", function(e) {
    	e.preventDefault();
        $.get(this.href + '/format/html', function(data) {
        	$( "#send-reminder" ).html(data);
            $( "#send-reminder" ).dialog('open');
        	noticeName = $( "#form-notice-send-reminder");
        });
    });

    $(document).on("click", ".add-all-contribution", function(e) {
        e.preventDefault();
    	noticeName = $( "#form-notice-add-all-contribution");
        clearNotice();
    	$( "#form-add-all-contribution" ).get(0).reset(); // reset form
    	if ($( "#add-all-contribution" ).is(":hidden"))
            $( ".top-action" ).hide();
        $( "#add-all-contribution" ).stop(true, true).slideToggle("slow");
    });

    $(document).on("click", ".add-member2", function(e) {
        e.preventDefault();
    	if ($( "#add-member2" ).is(":hidden"))
            $( ".top-action" ).hide();
        $( "#add-member2" ).stop(true, true).slideToggle("slow");
    });


	// jquery tabs for balancesheet dates
    $( "#tabs button" ).button().click(function(e) {
    	e.preventDefault();
    	currentTable = $(this).attr('id');
    	getContributionTable($(this).attr('id'));
    });

    $( "#tabs" ).tabs();
    


    $.ajaxSetup({
        error: function handleXhrError(jqXHR, textStatus, errorThrown) {
            // @toto: test if we correctly handle all error types (404, 500, 401...) 
            var response = jQuery.parseJSON(jqXHR.responseText);
			noticeName = noticeTop;
            clearNotice();
            console.log(jqXHR.responseText);
            //updateNotice("<p>" + response.message + "</p>", "error");
            alert(response.message);
        }
    });
    
    // add remove button support
    $.extend($.ui.dialog.prototype, { 
        "addbutton": function(buttonName, func) {    
            var buttons = this.element.dialog("option", "buttons"); 
            buttons[buttonName] = func; 
            this.element.dialog("option", "buttons", buttons); 
        }
    });
    $.extend($.ui.dialog.prototype, { 
        "removebutton": function(buttonName) {    
            var buttons = this.element.dialog("option", "buttons"); 
            delete buttons[buttonName]; 
            this.element.dialog("option", "buttons", buttons); 
        } 
    });

<?php $this->jQuery()->onLoadCaptureEnd() ?>